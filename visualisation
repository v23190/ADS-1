# -*- coding: utf-8 -*-
"""Untitled8.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RVjT0CNeX3FudLS8VEkn4d7OmHONQ5J5
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

# Generating random data for demonstration
np.random.seed(42)
data = {
    'Date': pd.date_range(start='2022-01-01', end='2022-01-10'),
    'Category_A': np.random.rand(10) * 10,
    'Category_B': np.random.rand(10) * 5,
    'Category_C': np.random.rand(10) * 8
}

df = pd.DataFrame(data)

def line_plot(data_frame, x_col, y_cols):
    """
    Create a line plot showing multiple lines with proper labels and legend.

    Parameters:
    - data_frame (pd.DataFrame): The DataFrame containing the data.
    - x_col (str): The column for the x-axis.
    - y_cols (list): List of columns to be plotted on the y-axis.

    Returns:
    - None
    """
    plt.figure(figsize=(15, 6))
    for col in y_cols:
        plt.plot(data_frame[x_col], data_frame[col], label=col)

    plt.xlabel(x_col)
    plt.ylabel("Values")
    plt.title("Line Plot with Multiple Lines")
    plt.legend()
    plt.show()

def bar_chart(data_frame, x_col, y_col):
    """
    Create a bar chart to compare values.

    Parameters:
    - data_frame (pd.DataFrame): The DataFrame containing the data.
    - x_col (str): The column for the x-axis.
    - y_col (str): The column to be plotted on the y-axis.

    Returns:
    - None
    """
    plt.figure(figsize=(15, 6))
    plt.bar(data_frame[x_col], data_frame[y_col], color='skyblue')

    plt.xlabel(x_col)
    plt.ylabel(y_col)
    plt.title("Bar Chart")
    plt.show()

def box_plot(data_frame, x_col, y_col):
    """
    Create a box plot to visualize distributions.

    Parameters:
    - data_frame (pd.DataFrame): The DataFrame containing the data.
    - x_col (str): The column for the x-axis.
    - y_col (str): The column to be plotted on the y-axis.

    Returns:
    - None
    """
    plt.figure(figsize=(15, 6))
    plt.boxplot(data_frame[y_col])

    plt.xlabel(x_col)
    plt.ylabel(y_col)
    plt.title("Box Plot")
    plt.show()

# Example usage:
line_plot(df, 'Date', ['Category_A', 'Category_B', 'Category_C'])
bar_chart(df, 'Date', 'Category_A')
box_plot(df, 'Date', 'Category_B')
